var SwrveSDK=function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/dist",n(n.s=27)}({27:function(e,t){const n="swrve.push_clicked",i="swrve.push_closed",o="swrve.push_receieved";function r(e,t,n){var i=new MessageChannel;i.port1.onmessage=function(e){e.data.error?reject(e.data.error):resolve(e.data)},clients.matchAll({includeUncontrolled:!0}).then(o=>{o.forEach(o=>{o.postMessage({event:JSON.stringify(e),type:t,body:n},[i.port2])})})}self.addEventListener("push",e=>{var t;if(e.data&&(t=e.data.json()).data.swrve&&t.data.swrve._p){const n={body:t.body,data:{swrve:{title:t.data.swrve.title,p:t.data.swrve._p,sd:t.data.swrve._sd}}};t.image&&(n.image=t.image),t.icon&&(n.icon=t.icon),t.payload&&(n.data.payload=t.payload),e.waitUntil(Promise.all([new Promise(()=>{r(e,o,{})}),self.registration.showNotification(n.data.swrve.title,n)]))}}),self.addEventListener("notificationclick",e=>{e.notification.close();let t=Promise.resolve();var i={id:e.notification.data.swrve.p,customPayload:e.notification.data.payload};e.notification.data.swrve.sd&&(i.deeplink=e.notification.data.swrve.sd,t=clients.openWindow(i.deeplink)),e.waitUntil(Promise.all([t,new Promise(()=>{r(e,n,i)})]))}),self.addEventListener("notificationclose",e=>{e.waitUntil(Promise.all([new Promise(()=>{r(e,i,{})})]))}),self.addEventListener("install",function(e){self.skipWaiting()})}});
//# sourceMappingURL=SwrveWorker.js.map